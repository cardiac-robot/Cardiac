<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="Timeline" id="1" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="376" y="214">
                            <bitmap>media/images/box/movement/move.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="134">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <ActuatorList model="">
                                    <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="2.81013" />
                                        <Key frame="35" value="2.81013" />
                                        <Key frame="48" value="2.81013" />
                                        <Key frame="61" value="2.81013" />
                                        <Key frame="76" value="2.81013" />
                                        <Key frame="90" value="2.81013" />
                                        <Key frame="106" value="2.81013" />
                                        <Key frame="118" value="2.81013" />
                                        <Key frame="134" value="2.81013" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="5.35899" />
                                        <Key frame="35" value="5.35899" />
                                        <Key frame="48" value="5.35899" />
                                        <Key frame="61" value="5.35899" />
                                        <Key frame="76" value="5.35899" />
                                        <Key frame="90" value="5.35899" />
                                        <Key frame="106" value="5.35899" />
                                        <Key frame="118" value="5.35899" />
                                        <Key frame="134" value="5.35899" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="4.83163" />
                                        <Key frame="35" value="5.44688" />
                                        <Key frame="48" value="5.44688" />
                                        <Key frame="61" value="4.83163" />
                                        <Key frame="76" value="4.83163" />
                                        <Key frame="90" value="5.44688" />
                                        <Key frame="106" value="4.83163" />
                                        <Key frame="118" value="5.44688" />
                                        <Key frame="134" value="5.71056" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="-6.4137" />
                                        <Key frame="35" value="-6.4137" />
                                        <Key frame="48" value="-6.4137" />
                                        <Key frame="61" value="-6.4137" />
                                        <Key frame="76" value="-6.4137" />
                                        <Key frame="90" value="-6.4137" />
                                        <Key frame="106" value="-6.4137" />
                                        <Key frame="118" value="-6.4137" />
                                        <Key frame="134" value="-6.4137" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="-44.6466" />
                                        <Key frame="35" value="-53.3479" />
                                        <Key frame="48" value="-62.4007" />
                                        <Key frame="61" value="-80.3306" />
                                        <Key frame="76" value="-79.0123" />
                                        <Key frame="90" value="-84.6373" />
                                        <Key frame="106" value="-79.0123" />
                                        <Key frame="118" value="-84.6373" />
                                        <Key frame="134" value="-57.9182" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="-47.8155" />
                                        <Key frame="35" value="-62.3176" />
                                        <Key frame="48" value="-82.4448" />
                                        <Key frame="61" value="-40.1689" />
                                        <Key frame="76" value="-119.359" />
                                        <Key frame="90" value="-36.038" />
                                        <Key frame="106" value="-119.359" />
                                        <Key frame="118" value="-36.038" />
                                        <Key frame="134" value="-35.7743" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="1">
                                        <Key frame="21" value="0.266" />
                                        <Key frame="35" value="0.266" />
                                        <Key frame="48" value="0.266" />
                                        <Key frame="61" value="0.266" />
                                        <Key frame="76" value="0.266" />
                                        <Key frame="90" value="0.266" />
                                        <Key frame="106" value="0.266" />
                                        <Key frame="118" value="0.266" />
                                        <Key frame="134" value="0.266" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="6.94585" />
                                        <Key frame="35" value="6.94585" />
                                        <Key frame="48" value="7.56109" />
                                        <Key frame="61" value="7.56109" />
                                        <Key frame="76" value="7.56109" />
                                        <Key frame="90" value="7.56109" />
                                        <Key frame="106" value="7.56109" />
                                        <Key frame="118" value="7.56109" />
                                        <Key frame="134" value="7.56109" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="6.85796" />
                                        <Key frame="35" value="6.85796" />
                                        <Key frame="48" value="6.85796" />
                                        <Key frame="61" value="6.85796" />
                                        <Key frame="76" value="6.85796" />
                                        <Key frame="90" value="6.85796" />
                                        <Key frame="106" value="6.85796" />
                                        <Key frame="118" value="6.85796" />
                                        <Key frame="134" value="6.85796" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="-9.22623" />
                                        <Key frame="35" value="-9.84147" />
                                        <Key frame="48" value="-9.84147" />
                                        <Key frame="61" value="-9.84147" />
                                        <Key frame="76" value="-9.84147" />
                                        <Key frame="90" value="-9.84147" />
                                        <Key frame="106" value="-9.84147" />
                                        <Key frame="118" value="-9.84147" />
                                        <Key frame="134" value="-9.84147" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="-5.27591" />
                                        <Key frame="35" value="-5.27591" />
                                        <Key frame="48" value="-5.27591" />
                                        <Key frame="61" value="-5.27591" />
                                        <Key frame="76" value="-5.27591" />
                                        <Key frame="90" value="-5.27591" />
                                        <Key frame="106" value="-5.27591" />
                                        <Key frame="118" value="-5.27591" />
                                        <Key frame="134" value="-5.27591" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="74.2661" />
                                        <Key frame="35" value="13.2692" />
                                        <Key frame="48" value="-23.03" />
                                        <Key frame="61" value="-14.7682" />
                                        <Key frame="76" value="-10.4615" />
                                        <Key frame="90" value="-8.61579" />
                                        <Key frame="106" value="-10.4615" />
                                        <Key frame="118" value="-8.61579" />
                                        <Key frame="134" value="69.6957" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="17.488" />
                                        <Key frame="35" value="14.1482" />
                                        <Key frame="48" value="28.2108" />
                                        <Key frame="61" value="5.09532" />
                                        <Key frame="76" value="22.0584" />
                                        <Key frame="90" value="11.4235" />
                                        <Key frame="106" value="22.0584" />
                                        <Key frame="118" value="11.4235" />
                                        <Key frame="134" value="16.4334" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="-46.0577" />
                                        <Key frame="35" value="-75.4135" />
                                        <Key frame="48" value="-46.3213" />
                                        <Key frame="61" value="-19.9538" />
                                        <Key frame="76" value="-2.02391" />
                                        <Key frame="90" value="-6.15482" />
                                        <Key frame="106" value="-2.02391" />
                                        <Key frame="118" value="-6.15482" />
                                        <Key frame="134" value="0.788627" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="5.3638" />
                                        <Key frame="35" value="4.66066" />
                                        <Key frame="48" value="5.3638" />
                                        <Key frame="61" value="4.74855" />
                                        <Key frame="76" value="4.74855" />
                                        <Key frame="90" value="5.45169" />
                                        <Key frame="106" value="4.74855" />
                                        <Key frame="118" value="5.45169" />
                                        <Key frame="134" value="5.45169" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="6.41851" />
                                        <Key frame="35" value="6.41851" />
                                        <Key frame="48" value="6.41851" />
                                        <Key frame="61" value="6.41851" />
                                        <Key frame="76" value="6.41851" />
                                        <Key frame="90" value="6.41851" />
                                        <Key frame="106" value="6.41851" />
                                        <Key frame="118" value="6.41851" />
                                        <Key frame="134" value="6.41851" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="31.1161" />
                                        <Key frame="35" value="31.1161" />
                                        <Key frame="48" value="44.2998" />
                                        <Key frame="61" value="72.8646" />
                                        <Key frame="76" value="58.1867" />
                                        <Key frame="90" value="76.2045" />
                                        <Key frame="106" value="58.1867" />
                                        <Key frame="118" value="76.2045" />
                                        <Key frame="134" value="65.2181" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="48.5138" />
                                        <Key frame="35" value="48.5138" />
                                        <Key frame="48" value="77.5181" />
                                        <Key frame="61" value="37.2637" />
                                        <Key frame="76" value="115.751" />
                                        <Key frame="90" value="37.3516" />
                                        <Key frame="106" value="115.751" />
                                        <Key frame="118" value="37.3516" />
                                        <Key frame="134" value="31.4628" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="1">
                                        <Key frame="21" value="0.444" />
                                        <Key frame="35" value="0.444" />
                                        <Key frame="48" value="0.444" />
                                        <Key frame="61" value="0.444" />
                                        <Key frame="76" value="0.444" />
                                        <Key frame="90" value="0.444" />
                                        <Key frame="106" value="0.444" />
                                        <Key frame="118" value="0.444" />
                                        <Key frame="134" value="0.444" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="7.64417" />
                                        <Key frame="35" value="7.64417" />
                                        <Key frame="48" value="7.64417" />
                                        <Key frame="61" value="7.64417" />
                                        <Key frame="76" value="7.64417" />
                                        <Key frame="90" value="7.64417" />
                                        <Key frame="106" value="7.64417" />
                                        <Key frame="118" value="7.64417" />
                                        <Key frame="134" value="7.64417" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="-6.67737" />
                                        <Key frame="35" value="-6.67737" />
                                        <Key frame="48" value="-6.67737" />
                                        <Key frame="61" value="-6.67737" />
                                        <Key frame="76" value="-6.67737" />
                                        <Key frame="90" value="-6.67737" />
                                        <Key frame="106" value="-6.67737" />
                                        <Key frame="118" value="-6.67737" />
                                        <Key frame="134" value="-6.67737" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RHipYawPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="-9.22623" />
                                        <Key frame="35" value="-9.84147" />
                                        <Key frame="48" value="-9.84147" />
                                        <Key frame="61" value="-9.84147" />
                                        <Key frame="76" value="-9.84147" />
                                        <Key frame="90" value="-9.84147" />
                                        <Key frame="106" value="-9.84147" />
                                        <Key frame="118" value="-9.84147" />
                                        <Key frame="134" value="-9.84147" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="-5.00743" />
                                        <Key frame="35" value="-5.00743" />
                                        <Key frame="48" value="-5.00743" />
                                        <Key frame="61" value="-5.00743" />
                                        <Key frame="76" value="-5.00743" />
                                        <Key frame="90" value="-5.00743" />
                                        <Key frame="106" value="-5.00743" />
                                        <Key frame="118" value="-5.00743" />
                                        <Key frame="134" value="-5.00743" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="-1.49175" />
                                        <Key frame="35" value="-1.49175" />
                                        <Key frame="48" value="-26.1014" />
                                        <Key frame="61" value="-19.949" />
                                        <Key frame="76" value="-16.6091" />
                                        <Key frame="90" value="-8.96255" />
                                        <Key frame="106" value="-16.6091" />
                                        <Key frame="118" value="-8.96255" />
                                        <Key frame="134" value="59.3293" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="3.51326" />
                                        <Key frame="35" value="3.51326" />
                                        <Key frame="48" value="-23.9968" />
                                        <Key frame="61" value="-6.3306" />
                                        <Key frame="76" value="-26.7215" />
                                        <Key frame="90" value="-4.57277" />
                                        <Key frame="106" value="-26.7215" />
                                        <Key frame="118" value="-4.57277" />
                                        <Key frame="134" value="-5.3638" />
                                    </ActuatorCurve>
                                    <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="0">
                                        <Key frame="21" value="93.9539" />
                                        <Key frame="35" value="93.9539" />
                                        <Key frame="48" value="46.4044" />
                                        <Key frame="61" value="40.6036" />
                                        <Key frame="76" value="16.9607" />
                                        <Key frame="90" value="10.5446" />
                                        <Key frame="106" value="16.9607" />
                                        <Key frame="118" value="10.5446" />
                                        <Key frame="134" value="-33.2255" />
                                    </ActuatorCurve>
                                </ActuatorList>
                            </Timeline>
                        </Box>
                        <Box name="Say (1)" id="3" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="321" y="512">
                            <bitmap>media/images/box/interaction/say.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                            </Box>
                                            <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Puede venir ? Porfavor? ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <arabic>
                                                        <![CDATA[]]>
</arabic>
                                                    <czech>
                                                        <![CDATA[Ahoj]]>
</czech>
                                                    <danish>
                                                        <![CDATA[Hej]]>
</danish>
                                                    <german>
                                                        <![CDATA[Hallo]]>
</german>
                                                    <greek>
                                                        <![CDATA[]]>
</greek>
                                                    <english>
                                                        <![CDATA[Hello]]>
</english>
                                                    <spanish>
                                                        <![CDATA[Puede venir ? Porfavor?]]>
</spanish>
                                                    <finnish>
                                                        <![CDATA[Hei]]>
</finnish>
                                                    <french>
                                                        <![CDATA[Bonjour]]>
</french>
                                                    <italian>
                                                        <![CDATA[Ciao]]>
</italian>
                                                    <japanese>
                                                        <![CDATA[こんにちは]]>
</japanese>
                                                    <korean>
                                                        <![CDATA[안녕하세요]]>
</korean>
                                                    <dutch>
                                                        <![CDATA[Hallo]]>
</dutch>
                                                    <norwegian>
                                                        <![CDATA[]]>
</norwegian>
                                                    <polish>
                                                        <![CDATA[Cześć]]>
</polish>
                                                    <brazilian>
                                                        <![CDATA[Olá]]>
</brazilian>
                                                    <portuguese>
                                                        <![CDATA[Olá]]>
</portuguese>
                                                    <russian>
                                                        <![CDATA[Привет]]>
</russian>
                                                    <swedish>
                                                        <![CDATA[Hallå]]>
</swedish>
                                                    <turkish>
                                                        <![CDATA[Merhaba]]>
</turkish>
                                                    <chinese>
                                                        <![CDATA[]]>
</chinese>
                                                    <language>8</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="Speech" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Say" id="2" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="105" y="96">
                            <bitmap>media/images/box/interaction/say.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                            </Box>
                                            <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Doctora el paciente tiene un ritmo cardiaco muy alto! ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <arabic>
                                                        <![CDATA[]]>
</arabic>
                                                    <czech>
                                                        <![CDATA[Ahoj]]>
</czech>
                                                    <danish>
                                                        <![CDATA[Hej]]>
</danish>
                                                    <german>
                                                        <![CDATA[Hallo]]>
</german>
                                                    <greek>
                                                        <![CDATA[]]>
</greek>
                                                    <english>
                                                        <![CDATA[Hello]]>
</english>
                                                    <spanish>
                                                        <![CDATA[Doctora el paciente tiene un ritmo cardiaco muy alto!]]>
</spanish>
                                                    <finnish>
                                                        <![CDATA[Hei]]>
</finnish>
                                                    <french>
                                                        <![CDATA[Bonjour]]>
</french>
                                                    <italian>
                                                        <![CDATA[Ciao]]>
</italian>
                                                    <japanese>
                                                        <![CDATA[こんにちは]]>
</japanese>
                                                    <korean>
                                                        <![CDATA[안녕하세요]]>
</korean>
                                                    <dutch>
                                                        <![CDATA[Hallo]]>
</dutch>
                                                    <norwegian>
                                                        <![CDATA[]]>
</norwegian>
                                                    <polish>
                                                        <![CDATA[Cześć]]>
</polish>
                                                    <brazilian>
                                                        <![CDATA[Olá]]>
</brazilian>
                                                    <portuguese>
                                                        <![CDATA[Olá]]>
</portuguese>
                                                    <russian>
                                                        <![CDATA[Привет]]>
</russian>
                                                    <swedish>
                                                        <![CDATA[Hallå]]>
</swedish>
                                                    <turkish>
                                                        <![CDATA[Merhaba]]>
</turkish>
                                                    <chinese>
                                                        <![CDATA[]]>
</chinese>
                                                    <language>9</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="Speech" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Tactile Head" id="4" localization="8" tooltip="Detect touch on head tactile sensor." x="198" y="816">
                            <bitmap>media/images/box/sensors/tactileHead.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
            self.onStopped() #~ activate output of the box
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                            <Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                            <Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="7" />
                            <Output name="frontTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The front tactile head sensor was touched." id="8" />
                            <Output name="middleTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The middle tactile head sensor was touched." id="9" />
                            <Output name="rearTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The rear tactile head sensor was touched." id="10" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="If &gt; 0" id="1" localization="8" tooltip="Transmit only if value is &gt; 0." x="260" y="17">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="If &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="256" y="119">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="If &gt; 0" id="3" localization="8" tooltip="Transmit only if value is &gt; 0." x="261" y="223">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="8" outputowner="1" indexofoutput="4" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="5" />
                                            <Link inputowner="0" indexofinput="9" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" />
                                            <Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="Head-sequence" type="Lock" timeout="0" />
                        </Box>
                        <Box name="Say (2)" id="5" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="471" y="860">
                            <bitmap>media/images/box/interaction/say.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                            <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                            </Box>
                                            <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Gracias! ",
			"Finnish" : " Hei ",
			"French" : " Bonjour ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <arabic>
                                                        <![CDATA[]]>
</arabic>
                                                    <czech>
                                                        <![CDATA[Ahoj]]>
</czech>
                                                    <danish>
                                                        <![CDATA[Hej]]>
</danish>
                                                    <german>
                                                        <![CDATA[Hallo]]>
</german>
                                                    <greek>
                                                        <![CDATA[]]>
</greek>
                                                    <english>
                                                        <![CDATA[Hello]]>
</english>
                                                    <spanish>
                                                        <![CDATA[Gracias!]]>
</spanish>
                                                    <finnish>
                                                        <![CDATA[Hei]]>
</finnish>
                                                    <french>
                                                        <![CDATA[Bonjour]]>
</french>
                                                    <italian>
                                                        <![CDATA[Ciao]]>
</italian>
                                                    <japanese>
                                                        <![CDATA[こんにちは]]>
</japanese>
                                                    <korean>
                                                        <![CDATA[안녕하세요]]>
</korean>
                                                    <dutch>
                                                        <![CDATA[Hallo]]>
</dutch>
                                                    <norwegian>
                                                        <![CDATA[]]>
</norwegian>
                                                    <polish>
                                                        <![CDATA[Cześć]]>
</polish>
                                                    <brazilian>
                                                        <![CDATA[Olá]]>
</brazilian>
                                                    <portuguese>
                                                        <![CDATA[Olá]]>
</portuguese>
                                                    <russian>
                                                        <![CDATA[Привет]]>
</russian>
                                                    <swedish>
                                                        <![CDATA[Hallå]]>
</swedish>
                                                    <turkish>
                                                        <![CDATA[Merhaba]]>
</turkish>
                                                    <chinese>
                                                        <![CDATA[]]>
</chinese>
                                                    <language>8</language>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="Speech" type="Lock" timeout="0" />
                        </Box>
                        <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" />
                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                        <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="9" />
                        <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" />
                        <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                        <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
